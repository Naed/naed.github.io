<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[Hexo + Github Pages搭建个人博客]]></title>
    <url>%2F2019%2F03%2F25%2FHexo-Github%20Pages%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%2F</url>
    <content type="text"><![CDATA[Hexo + GitHub Pages 可以更加专注于博客内容，而不是要如何搭建一个博客网站。 Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用 Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。 GitHub Pages 是一个静态网站托管服务，直接从 Github 仓库托管你个人、公司或者项目页面 ，并且不需要你写任何后端语言来支持。GitHub Pages 的服务是免费的，但是也有一些限制*： GitHub Pages 网站可能不超过1 GB GitHub Pages 网站每月的带宽限制为100GB GitHub Pages 每小时更新不超过 10 次 优点 生成静态页面，访问速度快 免费，不需要服务器不需要后台 可以绑定自己的域名 基于 Github 版本管理，可修改和恢复历史版本 博客内容可以轻松打包、转移、发布到其它平台 准备工作安装前，必须检查电脑中是否已安装下列应用程序： NodeJS + NPM(速度慢，建议使用 cnpm 国内镜像) Git 本文使用的环境 Window 10 NodeJS 8.9.3 + npm 5.5.1 Git 2.21.0 Hexo 3.8.0 设置 Git 和 GitHub Pages检查确定 Git 连接到 Github。（具体参考Git安装教程） SSH Key 配置——使用 ssh key 来解决本地和 Github 服务器的连接，获取 Github 权限。 123$ cd ~/. ssh #检查本机已存在的ssh密钥ssh-keygen -t rsa -C "邮件地址" # 配置SSH，找到并打开.ssh\id_rsa.pub文件内容，拷贝到Github -&gt; Settings -&gt; SSH and GPG keys -&gt; New SSH key 创建仓库 Repo新建一个 user.github.io 的仓库，例如用户名是naed，那么 naed.github.io 。（必须是自己的用户名）。 具体参考 GitHub Pages官方网站教程 绑定域名 先ping 一下刚创建的 naed.github.io 获取IP 域名解析，A类型以 @ 的记录指向IP，CNAME以 www 的记录指向域名 naed.github.io // TODO，有待验证 使用 Hexo 搭建博客Hexo 搭建的详细内容建议参考 Hexo官方文档 安装 Hexo打开 Git bash 中执行 npm install -g hexo-cli 安装 Hexo 1$ npm install -g hexo-cli 初始化 Hexo两种方式进行初始化 在路径 /d/Dean/Workspace/hexo/ 创建 blog 文件夹，在此打开 Git bash 执行命令 hexo init 进行初始化。(建议选择以后不随意变动的文件位置) 1$ hexo init 或者，打开 Git bash 用命令进入文件夹进行初始化 12$ cd /d/Dean/Workspace/hexo/blog$ hexo init 初始化完成后会生成目录结构。此路径 /d/Dean/Workspace/hexo/hexo/blog 将作为 Hexo 的根目录 12345$ cd /d/Dean/Workspace/hexo/hexo/blog$ ls_config.yml node_modules/ package-lock.json scaffolds/ themes/db.json package.json public/ source/ 生成静态文件夹执行命令 hexo d 生成网站静态文件到默认的 public 文件夹1$ hexo g hexo g 是 hexo generate 的缩写 public 文件夹将会是 Github 上面显示的文件 启动本地服务器1$ hexo s hexo s 是 hexo server 的缩写，启动本地服务器，可在浏览器输入 http://localhost:4000/ 打开预览。 通过Hexo更新到Github 打开 Git bash 执行 npm install hexo-deployer-git --save 安装依赖包 不安装可能会有报错 ERROR Deployer not found: git 的情况*。 1$ npm install hexo-deployer-git --save 接着配置 _config.yml 中有关 deploy 的部分。（部署到 Github repo 仓库） 打开 /d/Dean/Workspace/hexo/blog 文件夹的 _config.yml 文件 repo 建议使用 SSH ，repo 也可以是 repository 在冒号后面必须有一个空格 1234deploy: type: git repo: git@github.com:Naed/naed.github.io.git branch: master 完成添加后，在 Git bash 使用 hexo d 或者 hexo g -d 进行部署即会把修改的文件更新上传到 Github 写博客新建文章在博客目录中打开 Git bash 中执行命令 hexo new &quot;new post&quot; 即可新建一个以 new post 为标题的 md 文件。 1$ hexo new "new post" Hexo 会在 source下的 _posts 里面生成相关 md 文件。 编辑并保存md文件，在 Git bash 执行 hexo s -g， 打开 http://localhost:4000/ 刷新就能看到修改。（同一个文件继续编辑，直接刷新就能看到修改） 组合命令1234hexo s -g #生成并本地预览hexo d -g #生成并上传hexo clean &amp;&amp; hexo d -g #清理缓存和生成上传 设置文章摘要新建的文章，默认在列表页显示文章全文。在文章的 md 文件中，插入 &lt;!-- more --&gt; 到文章中，Hexo 会自动识别摘要并添加 Readmore 按钮。 1&lt;!-- more --&gt; 设置文章 Tags打开新建的 md 文件，设置文章的 tags。 两种方式 123title: Tags Testing Articletags: [Testing, Another Tag]--- 或者 12345title: Tags Testing Articletags: - Testing - Another Tag--- 修改主题NexT 主题安装这里以主题 NexT 作为示例。 使用 Git 安装（这一方式将为你下载完整仓库，其中包含 .git 目录）12$ cd hexo$ git clone https://github.com/theme-next/hexo-theme-next themes/next 安装完成后，会在 themes 目录下找到 打开 _config.yml 并找到 theme 修改为 next ，接着执行 hexo clean 和 hexo g 重新生成进行启用新主题。 NexT 启用本地搜索 安装。在 Hexo 的根目录 /d/Dean/Workspace/hexo/hexo/blog 的以下面的命令安装 hexo-generator-searchdb 1$ npm install hexo-generator-searchdb --save Hexo 配置。在 Hexo 根目录的 _config.yml 文件添加以下内容 12345search: path: search.xml field: post format: html limit: 10000 NexT 配置。在 theme 文件夹进入 next 文件夹，打开 next 的 _config.yml 文件，启用本地搜索 enable: true 1234567891011# Local search# Dependencies: https://github.com/theme-next/hexo-generator-searchdblocal_search: enable: false # if auto, trigger search by changing input # if manual, trigger search by pressing enter key or search button trigger: auto # show top n results per article, show all results by setting to -1 top_n_per_article: 1 # unescape html strings to the readable one unescape: false NexT 其他设置 参考 NexT User Docs – Starting to Use ，新建About页和tags页、设置sidebar头像、修改默认语言、sidebar返回顶部等。在themes/next/_config.yml 可以查看更多设置 在主题 _config.yml 中的 busuanzi_count 启用 enable 不蒜子访客计数显示功能。执行 hexo d -g 部署到线上即可显示正常。 NexT 效果展示 Hexo 多台电脑设备同步管理// TODO，后续更新 Hexo 常用命令来源参考 Hexo 指令 Hexo 最常用的几个命令 hexo initHexo初始化1$ hexo init [folder] 新建一个网站。如果没有设置 folder ，Hexo 默认在目前的文件夹建立网站 hexo s启动本地服务器，默认访问地址： http://localhost:4000/1$ hexo s hexo s 是 hexo server 的缩写，命令效果一致 对 Hexo 根目录 _config.yml 的修改，需要重启本地服务器后才能预览效果 Ctrl + c 关闭 server hexo new新建标题为 new post 的文章1$ hexo new "new post" 在博客目录下的 source -&gt; _posts 文件夹中新建 md 文件，在标题可在对应 md 文件修改 如果标题包含空格的话，请使用引号括起来 hexo d1$ hexo d 部署。自动生成网站静态文件，并部署到设定的仓库 hexo d 是 hexo deploy 的缩写，命令效果一致 hexo clean1$ hexo clean 清除缓存文件 db.json 和已生成的静态文件 public 在某些情况（尤其是更换主题后），如果发现对站点的更改不生效，可能需要运行该命令 hexo g1$ hexo g 编辑在博客目录下的 source -&gt; _posts 文件夹中 md 文件，使用 hexo g 命令后，Hexo会把 md 文件生成 html 的网站静态页面到 public 文件夹 便于查看网站生成的静态文件或者手动部署网站 hexo g 是 hexo generate 的缩写，命令效果一致 hexo new page1$ hexo new page Aboutme 新建一个标题为 Aboutme 的页面，默认链接地址为 主页地址/aboutme/ 标题可以为中文，但一般习惯用英文 页面标题和文章一样可以随意修改 页面不会出现在首页文章列表和归档中，也不支持设置分类和标签 hexo version1$ hexo version 显示 Hexo 版本 hexo help1$ hexo help 查看帮助，指令和操作 来源参考 GitHub Pages Hexo文档 使用hexo+github搭建免费个人博客详细教程 Hexo主题-NexT]]></content>
      <tags>
        <tag>Hexo</tag>
        <tag>Github</tag>
        <tag>Git</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Markdown基础语法]]></title>
    <url>%2F2019%2F03%2F24%2FMardown%E5%9F%BA%E7%A1%80%E5%85%A5%E9%97%A8%2F</url>
    <content type="text"><![CDATA[Markdown 是一种方便记忆、书写的纯文本标记语言，用户可以使用这些标记符号以最小的输入代价生成极富表现力的文档。 目录[TOC]表示创建目录列表，代码格式: [TOC]。在Vscode中可以使用 Markdown TOC 自动生成目录的插件。1[TOC] 目录 标题 换行 分割线 引用 文字样式 代码高亮 列表 待办事项 链接以及图片 字符转义 表格 流程图 甘特图 来源参考 标题Markdown支持6种级别的标题，对应html标签 h1 ~ h6 代码格式：# 标题内容 123456# 一级标题 h1## 二级标题 h2### 三级标题 h3#### 四级标题 h4##### 五级标题 h5###### 六级标题 h6 换行三种方式 段落文字后敲两个空行，再按回车键编辑另一行文字 段落文字前后加上 &lt;br/&gt; 或者 &lt;/br&gt; 两段文字之间空一行 1234567891011Test1 &lt;/br&gt;Test2Test3 // 两个空格 + 回车键 Test4Test5Test6 Test1 Test2 Test3Test4 Test5 Test6 分割线三个或者三个以上的 - 或者 *123---*** 引用&gt; 引用文字 1&gt; 这是引用的示例 这是引用的示例 文字样式在Markdown中有：斜体、加粗、高亮、划线。 1234567*斜体***加粗**==高亮==~~划线~~ 斜体 加粗 ==高亮== 划线 如需修改文字大小/颜色/字体，就要用font标签 color代表字体颜色（要用16进制颜色值），size代表文字大小，face代表字体 1&lt;font color=#2196F3 size=2 face=&quot;宋体&quot;&gt;宋体大小为2的字&lt;/font&gt; 宋体大小为12的字 文字居中 1&lt;center&gt;文字居中&lt;/center&gt; 文字居中 代码高亮 单行代码：代码之间分别用一个反引号包起来 代码块：代码之间分别用三个反引号包起来，且两边的反引号单独占一行 这是 单行代码 的示例1这是 `单行代码` 的示例 代码块可以根据不同的语言配置不同的代码着色 123for(var i=1;i&lt;=100;i++)&#123;console.log(i);&#125; Web常用编程语言：(基本是小写形式) CSS - css HTML - html javaScript - javascript JSON - json Less - less SCSS - scss YAML - yml text - text/plain 列表Markdown 支持有序列表和无序列表 无序列表： 使用 * 或 + 或 - 标识12345- 列表1 - 列表1.1 - 列表1.2 - 列表1.21 - 列表1.22 列表1 列表1.1 列表1.2 列表1.21 列表1.22 有序列表： 使用数字加 . 标识1231. 列表12. 列表23. 列表3 列表1 列表2 列表3 待办事项在Markdown中输入你最近的代办事项 12- [ ] 未完成事项- [x] 已完成事项 未完成事项 未完成事项1 未完成事项2 已完成事项 已完成1 链接以及图片在Markdown中添加链接和图片 图片建议上传到图床网站生成外链再插入到Markdown，本文使用 SM.MS 免费图床服务 123[这是Vscode扩展链接](https://marketplace.visualstudio.com/)![这是Markdown图片](https://i.loli.net/2019/03/27/5c9aed1a8160f.png) 这是Vscode扩展链接 字符转义反斜线（\）用于插入在 Markdown 语法中有特殊作用的字符123这是用来 *演示* 的 _文本_这是用来 \*演示\* 的 \_文本\_ 这是用来 演示 的 _文本_ 这是用来 *演示* 的 _文本_ 表格在Markdown中绘制表格 1234大标题1|大标题2|大标题3---|---|---内容1|内容2|内容3内容1|内容2|内容3 这里是三个所以写成—|—|—，如果是两个就是—|—，四个就是—|—|—|—大标题1|大标题2|大标题3—|—|—内容1|内容2|内容3内容1|内容2|内容3 流程图在Markdown中创建流程图（类似于：树状图） ==暂不展示== 甘特图甘特图能够将你最近的计划直观地显示出来，对计划安排很有用 ==暂不展示== 来源参考 Markdown快速入门-少数派 欢迎使用 Cmd Markdown 编辑阅读器]]></content>
      <tags>
        <tag>Markdown</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[First Post]]></title>
    <url>%2F2019%2F03%2F24%2FFirst-Post%2F</url>
    <content type="text"><![CDATA[This is my first post! Naed 2019.03.24]]></content>
  </entry>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2F2019%2F03%2F23%2Fhello-world%2F</url>
    <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new "My New Post" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment]]></content>
  </entry>
</search>
